package collection;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/*순차적으로 추가.삭제 시 arrayList 좀더 빠름 =>size 크게 잡는게 중요
 * 중간 데이터를 추가/삭제 시  linkedList 가 좀 더 빠름
*/
public class ListEx5 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		List<String> arrayList= new ArrayList<String>(2000000);
		List<String> linkedList= new LinkedList<String>();
		
		System.out.println("******순차적추가******");
	System.out.println("어레이리스트 걸린시간:"+add1(arrayList));	
	System.out.println("링크리스트  걸린시간:"+add1(linkedList));	
	
	System.out.println();
	
	System.out.println("******중간에서 추가******");
	System.out.println("어레이리스트 걸린시간:"+add2(arrayList));	
	System.out.println("링크리스트  걸린시간:"+add2(linkedList));	
	System.out.println();
	System.out.println("******중간에서 삭제******");
	System.out.println("어레이리스트 걸린시간:"+remove1(arrayList));	
	System.out.println("링크리스트  걸린시간:"+remove1(linkedList));	
	System.out.println();
	System.out.println("******순차적으로 삭제******");
	System.out.println("어레이리스트 걸린시간:"+remove2(arrayList));	
	System.out.println("링크리스트  걸린시간:"+remove2(linkedList));	
	
	
	}//메인
	//순차적인 추가
	public static long add1(List<String> list) {
		long start=System.currentTimeMillis();
		for (int i = 0; i <1000000; i++) {
			list.add(i+"");
		}
		long end=System.currentTimeMillis();
		return end-start;
	}
	//중간에서 추가ㅣ
	public static long add2(List<String> list) {
		long start=System.currentTimeMillis();
		for (int i = 0; i <10000; i++) {
			list.add(500,"X");
		}
		long end=System.currentTimeMillis();
		return end-start;
	}//
	
	//중간에서 삭제
	public static long remove1(List<String> list) {
		
		long start=System.currentTimeMillis();
		for (int i = 0; i <10000; i++) {
			list.remove(i);
		}
		long end=System.currentTimeMillis();
		return end-start;
	}
	
	//순차적인삭제	
	public static long remove2(List<String> list) {
		
		long start=System.currentTimeMillis();
		for (int i =list.size()-1; i >=0; i--) {
			list.remove(i);
		}
		long end=System.currentTimeMillis();
		return end-start;
	}

}
